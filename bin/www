#!/usr/bin/env node

var debug = require('debug')('project:server');
var cluster = require('express-cluster');

/**
 * Make a log directory
 */

var fs = require('fs')
try {
	fs.mkdirSync('./log');
}
catch(error) {
	if (error.code != 'EEXIST') {
		console.error('Could not create log directory, error was: ', error);
		process.exit(1);
	}
}

/**
 * Initial log4js
 */

var log4js = require('log4js');
log4js.configure('./config/log4js.json');

var log = log4js.getLogger('startup');

/**
 * Listen on provided port, on all network interfaces.
 */

/**
 * Normalize a port into a number, string, or false.
 */

cluster(function() {
	var app = require('../app');
	var https = require('https');

	var certOptions = {
		key: fs.readFileSync('ssl/key.pem'),
		cert: fs.readFileSync('ssl/cert.pem')
	}	

	app.set('port', process.env.PORT || 3000);

	var server = https.createServer(certOptions, app);

	var io = require('socket.io')(server);
	require('../socket.io/trafficLight.socket')(io);
	require('../socket.io/trackingVehicle.socket')(io);

	server.listen(app.get('port'));
	server.on('listening', function() {
		log.info('Express server listening on port ', server.address().port)
	});
})